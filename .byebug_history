c
vote
!vote
vote
c
n
c
Answer.find_by(id: params[:id]).question.id
Answer.find_by(id: params[:id]).question
c
@all_questions.first.user.username
@all_questions.first.user.user_name
@all_questions.first.user.name
@all_questions.first.title
@all_questions.first.user
@all_questions.class
@all_questions = Question.find_by_sql("SELECT questions.*, CASE WHEN questions.updated_at > answers.updated_at THEN questions.updated_at WHEN answers.updated_at > questions.updated_at THEN answers.updated_at ELSE questions.updated_at END AS activity FROM questions LEFT OUTER JOIN answers ON questions.id = answers.question_id GROUP BY questions.id, answers.updated_at ORDER BY activity DESC")
Question.find_by_sql("SELECT questions.*, CASE WHEN questions.updated_at > answers.updated_at THEN questions.updated_at WHEN answers.updated_at > questions.updated_at THEN answers.updated_at ELSE questions.updated_at END AS activity FROM questions LEFT OUTER JOIN answers ON questions.id = answers.question_id GROUP BY questions.id, answers.updated_at ORDER BY activity DESC")
c
Question.find_by_sql("SELECT questions.id, CASE WHEN questions.updated_at > answers.updated_at THEN questions.updated_at WHEN answers.updated_at > questions.updated_at THEN answers.updated_at ELSE questions.updated_at END AS activity FROM questions LEFT OUTER JOIN answers ON questions.id = answers.question_id GROUP BY questions.id, answers.updated_at ORDER BY activity DESC")
c
elm
c
params
@current_user.password
@current_user
n
@current_user
c
@current_user
params
@current_user.password
n
@current_user.password
@current_user
@current_suer
n
c
  @user = User.find_by_email(params[:email])
params
